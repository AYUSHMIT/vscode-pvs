[{
	"description": "Autocomplete theory block",
	"prefix": "theory",
	"scope": "pvs",
	"body": [
		"${TM_CURRENT_LINE/\\w+\\:(\\s*\\w+)//}THEORY",
		"  BEGIN $0",
		"  END ${TM_CURRENT_LINE/(\\w+)\\:(\\s*\\w+)/$1/}"
	],
	"notes": "the regexp is in the form (\\w+):(\\s*\\w) -- the first group captures the theory name, the second group captures the incomplete input :theory"
}, {
	"description": "Insert if-then-else block",
	"prefix": "if-then-else",
	"scope": "pvs",
	"body": [
		"IF ${1:cond} THEN ${2:expr1} ELSE ${3:expr2} ENDIF"
	]
}, {
	"description": "Insert COND block",
	"prefix": "cond-endcond",
	"scope": "pvs",
	"body": [
		"COND",
		"  ${1:be1} -> ${2:e1},",
		"  ${3:be2} -> ${4:e2}",
		"ENDCOND"
	]
}, {
	"description": "Insert BEGIN-END block",
	"prefix": "begin-end",
	"scope": "pvs",
	"body": [
		"BEGIN",
		"  $1",
		"END"
	]
}]