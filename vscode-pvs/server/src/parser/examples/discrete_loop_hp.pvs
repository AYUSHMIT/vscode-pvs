discrete_loop_hp: THEORY
BEGIN

  IMPORTING dynamic_logic

  %-- Definition of syntactic sugar for variables and assignments
  a: nat = 0
  w: nat = 1
  x: nat = 2
  y: nat = 3
  %--


  
  %---------------------------------
  % Simple discrete loop program
  %
  % (x>=8) /\ (y>=0) /\ (y<=5)
  %   --> [(x:=x+y; y:=x-2y)*](x>=0)
  %
  %---------------------------------
   
  %---------------------------------
  % discrete_loop: PROBLEM
  %      (x>=8) AND (y>=f(x)) AND (y<=5)
  %      |- [(x:=x+y; y:=x-2y)*] (x>=0)
  %---------------------------------
  discrete_loop: LEMMA
     (val(x) >= cnst(8)) AND (val(y) >= f(val(x))) AND (val(y) <= cnst(5))
     |- ALLRUNS(STAR(SEQ(ASSIGN((: (x, val(x) + val(y)) :)), ASSIGN((: (y, val(x) - val(y)) :)))),(val(x) >= cnst(0)))

  %|- discrete_loop : PROOF
  %|- (spread (dl-loop "val(x) >= val(y) AND val(y) >= 0")
  %|-  ((dl-grind) (dl-grind) (dl-assert)))
  %|- QED


  % Assignment with test
  %---------------------------------
  % test3: PROBLEM
  %   (x=0) |- [?x>0;x:=x + 1] (x=0)
  %---------------------------------
  test3: LEMMA
  (val(x) = cnst(0))
  |- ALLRUNS(SEQ(val(x) > cnst(0), ASSIGN((: (x, val(x) + cnst(1)) :))),(val(x) = cnst(0)))


  % test with AND
  %---------------------------------
  % test4: PROBLEM
  %   (x > 0) AND (y > 0) |- [?(x < 5 AND y < 3); x := x +1; y:= y + 1] (x > 0 AND y > 0)
  %---------------------------------
  test4: LEMMA
  (val(x) > cnst(0)) AND (val(y) > cnst(0))
  |- ALLRUNS(SEQ((val(x) < cnst(5) AND val(y) < cnst(3)), ASSIGN((: (x, val(x) + cnst(1), y, val(y) + cnst(1)) :))),(val(x) > cnst(0) AND val(y) > cnst(0)))


  % Unions
  %---------------------------------
  % test5: PROBLEM
  %   (x > 0) AND (y > 0) |- [(a:=1 ++ a:=-1; x := x +1; y:= y + 1)*] (x > 0 AND y > 0)
  %---------------------------------
  test5: LEMMA
  (val(x) > cnst(0)) AND (val(y) > cnst(0))
  |- ALLRUNS(STAR(SEQ(ASSIGN((: (a, cnst(1)) :))ASSIGN((: (a, cnst(-1) - , x, val(x) + cnst(1)) :)), ASSIGN((: (y, val(y) + cnst(1)) :)))),(val(x) > cnst(0) AND val(y) > cnst(0)))


  % Differential equations
  %---------------------------------
  % test6: PROBLEM
  %   (x > 0) AND (y > 0) |- [x'= -y, y'=-y] (x > 0 AND y >0)
  %---------------------------------
  test6: LEMMA
  (val(x) > cnst(0)) AND (val(y) > cnst(0))
  |- ALLRUNS(DIFF((: (x - val(y)) :), DLTRUE)DIFF((: (y - val(y)) :), DLTRUE),(val(x) > cnst(0) AND val(y) > cnst(0)))


  % any
  %---------------------------------
  % test7: PROBLEM
  %   (x > 0) AND (y > 0) |- [w:=*; x'= x + w] (x > 0)
  %---------------------------------
  test7: LEMMA
  (val(x) > cnst(0)) AND (val(y) > cnst(0))
  |- ALLRUNS(SEQ(w, , DIFF((: (xval(x) + val(w)) :), DLTRUE)),(val(x) > cnst(0)))



END discrete_loop_hp

