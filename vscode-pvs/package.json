{
	"name": "vscode-pvs",
	"description": "Integrates the PVS theorem proving system into Visual Studio Code",
	"version": "1.0.26-delta",
	"author": "Paolo Masci",
	"displayName": "PVS",
	"icon": "icons/pvs-icon.png",
	"license": "NASA-1.3",
	"notices": {
		"copyright": "Copyright 2019 United States Government as represented by the Administrator of the National Aeronautics and Space Administration. All Rights Reserved.",
		"disclaimers": {
			"No Warranty": "THE SUBJECT SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT 'AS IS.'",
			"Waiver and Indemnity": "RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS AGREEMENT."
		}
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/nasa/vscode-pvs"
	},
	"publisher": "paolomasci",
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"vscode-pvs",
		"pvs",
		"prototype verification system"
	],
	"engines": {
		"vscode": "^1.32.3"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"alternativeActivationEvents": [
		"onLanguage:pvs",
		"workspaceContains:**/.pvs"
	],
	"main": "./client/out/pvsLanguageClient",
	"main-ext": "./client/out/pvsLanguageClient",
	"main-test": "./client/out/test/testPvsLanguageClient",
	"extensionKind": [
		"ui"
	],
	"contributes": {
		"notes": {
			"description": "These contributed settings can be read using vscode.workspace.getConfiguration('pvs')"
		},
		"viewsWelcome": [
			{
				"view": "workspace-explorer-view",
				"contents": "You have not yet opened a PVS Workspace.\n[Open PVS Workspace](command:vscode-pvs.open-pvs-workspace)"
			}
		],
		"configuration": [
			{
				"type": "object",
				"title": "PVS: Prototype Verification System",
				"properties": {
					"pvs.path": {
						"type": "string",
						"default": "",
						"description": "PVS installation folder"
					},
					"pvs.pvsLibraryPath": {
						"type": "string",
						"default": "",
						"description": "PVS library path (colon-separated list of folders, e.g., usr/libs/L1:usr/libs/L2)"
					},
					"pvs.serviceProvider.codelens": {
						"type": "boolean",
						"default": true,
						"description": "Enable in-line actionable commands"
					},
					"pvs.serviceProvider.autocompletion": {
						"type": "boolean",
						"default": true,
						"description": "Autocomplete symbol names and language keywords"
					},
					"pvs.serviceProvider.definitions": {
						"type": "boolean",
						"default": true,
						"description": "Search symbol definitions"
					},
					"pvs.serviceProvider.hover": {
						"type": "boolean",
						"default": true,
						"description": "Show hover tooltips for symbols"
					},
					"pvs.serviceProvider.rename": {
						"type": "boolean",
						"default": true,
						"description": "Support for renaming of theories & formulas"
					},
					"pvs.xtras.enableErrorTolerantParser": {
						"type": "boolean",
						"default": false,
						"description": "Enable error tolerant parser. Requires Java JDK v1.8 or greater (https://openjdk.java.net)"
					},
					"pvs.xtras.enableXmlrpcLoggger": {
						"type": "boolean",
						"default": true,
						"description": "Log xmlrpc messages (output channel vscode-pvs:xmlrpc)"
					},
					"pvs.xtras.enableProfiler": {
						"type": "boolean",
						"default": false,
						"description": "Log profiler data (output channel vscode-pvs:profiler)"
					}
				},
				"disabled_properties": {
					"pvs.xperimental.developer.lispInterface": {
						"type": "boolean",
						"default": false,
						"description": "Use Lisp interface when interacting with the theorem prover. Requires NASALib and vscode-output patch."
					}
				}
			}
		],
		"iconThemes": [
			{
				"id": "pvs",
				"label": "PVS",
				"path": "./icons/pvs-icons-theme.json"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "pvs-container",
					"title": "PVS",
					"icon": "icons/pvs-icon-alt.png"
				}
			]
		},
		"views": {
			"pvs-container": [
				{
					"id": "workspace-explorer-view",
					"name": "PVS Workspace Explorer",
					"when": "pvs-server-active"
				},
				{
					"id": "proof-explorer-view",
					"name": "PVS Proof Explorer",
					"when": "pvs-server-active && proof-explorer.visible"
				},
				{
					"id": "proof-mate-view",
					"name": "PVS Proof Mate",
					"when": "pvs-server-active && proof-mate.visible",
					"visibility": "collapsed"
				}
			],
			"explorer": []
		},
		"snippets": [
			{
				"language": "pvs",
				"path": "./snippets.json"
			}
		],
		"languageServerExample.trace.server": {
			"scope": "window",
			"anyOf": [
				{
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off"
				},
				{
					"type": "object",
					"properties": {
						"verbosity": {
							"type": "string",
							"enum": [
								"off",
								"messages",
								"verbose"
							],
							"default": "off"
						},
						"format": {
							"type": "string",
							"enum": [
								"text",
								"json"
							],
							"default": "text"
						}
					}
				}
			],
			"default": "off",
			"description": "Traces the communication between VS Code and the language server."
		},
		"commands": [
			{
				"command": "vscode-pvs.typecheck-file",
				"title": "Typecheck File",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.typecheck-file-inline",
				"title": "Typecheck",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs",
				"icon": "icons/typecheck-icon.png"
			},
			{
				"command": "vscode-pvs.prove-theory",
				"title": "Re-run All Proofs",
				"enablement": "pvs-server-active == true && !in-checker && !autorun && viewItem != workspace-overview",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.prove-theory-inline",
				"title": "Prove-All",
				"enablement": "pvs-server-active == true && !in-checker && !autorun && viewItem != workspace-overview",
				"category": "pvs",
				"icon": "icons/prove-icon.png"
			},
			{
				"command": "vscode-pvs.prove-importchain",
				"title": "Re-run ImportChain",
				"enablement": "pvs-server-active == true && !in-checker && !autorun && viewItem != workspace-overview",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.show-proof-summary",
				"title": "Show Proof Summary",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.generate-tccs",
				"title": "Generate TCCs",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.show-tccs",
				"title": "Show Typecheck Conditions (TCCs)",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.show-tccs-alt",
				"title": "Show",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.parse-file",
				"title": "Parse File",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.new-pvs-file",
				"title": "New PVS File",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.open-pvs-file-or-folder",
				"title": "Open PVS File...",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.open-pvs-workspace",
				"title": "Open PVS Workspace...",
				"enablement": "pvs-server-active == true",
				"category": "pvs",
				"icon": "icons/open-workspace.png"
			},
			{
				"command": "vscode-pvs.view-prelude-file",
				"title": "View Prelude File",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.clean-pvs-workspace",
				"title": "Clean PVS Workspace",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.parse-workspace",
				"title": "Parse Workspace",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.typecheck-workspace",
				"title": "Typecheck Workspace",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.typecheck-workspace-inline",
				"title": "Typecheck",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.hp2pvs",
				"title": "Generate PVS file",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.prove-formula",
				"title": "Prove",
				"enablement": "pvs-server-active == true && !autorun",
				"category": "pvs",
				"icon": "icons/prove-icon.png"
			},
			{
				"command": "vscode-pvs.command-palette",
				"title": "Command Palette...",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "vscode-pvs.discharge-tccs-explorer",
				"title": "Discharge",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs",
				"icon": "icons/prove-icon.png"
			},
			{
				"command": "vscode-pvs.discharge-tccs",
				"title": "Discharge TCCs",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs",
				"icon": "icons/prove-icon.png"
			},
			{
				"command": "vscode-pvs.pvsio-evaluator",
				"title": "Evaluate in PVSio",
				"enablement": "pvs-server-active == true && !in-checker && !autorun",
				"category": "pvs"
			},
			{
				"command": "proof-mate.exec-proof-command",
				"title": "Execute",
				"enablement": "pvs-server-active == true",
				"icon": "icons/play-icon.png",
				"category": "pvs"
			},
			{
				"command": "proof-mate.run-sketchpad",
				"title": "Run-all",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-mate.send-to-terminal",
				"title": "Send to terminal",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.delete-node",
				"title": "Delete",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.trim-node",
				"title": "Trim",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.trim-unused",
				"title": "Remove Unused Commands",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.create-proof-branch",
				"title": "New branch",
				"enablement": "view == proof-explorer-view && viewItem != proof-branch && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.new-proof-command",
				"title": "New proof command",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.show-sequent",
				"title": "Show sequent",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"icon": "icons/browser-arrow-icon.png",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.edit-node",
				"title": "Edit",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.cut-node",
				"title": "Cut",
				"enablement": "view == proof-explorer-view && pvs-server-active == true && viewItem != root",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.copy-node",
				"title": "Copy",
				"enablement": "view == proof-explorer-view && pvs-server-active == true && viewItem != root",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.paste-node",
				"title": "Paste",
				"enablement": "view == proof-explorer-view && proof-explorer.clipboard-contains-node && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.cut-subtree",
				"title": "Cut Subtree",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.copy-subtree",
				"title": "Copy Subtree",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.paste-subtree",
				"title": "Paste Subtree",
				"enablement": "view == proof-explorer-view && proof-explorer.clipboard-contains-tree && pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.export-prooflite",
				"title": "Export ProofLite (.prl)",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.new-proof",
				"title": "New Proof",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.open-proof",
				"title": "Open...",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.quit-proof",
				"title": "Quit Proof",
				"enablement": "pvs-server-active == true",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.back",
				"title": "Back one step",
				"icon": "icons/prev-icon.png",
				"enablement": "in-checker == true && !proof-explorer.running",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.forward",
				"title": "Step proof",
				"icon": "icons/next-icon.png",
				"enablement": "in-checker == true && !proof-explorer.running",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.run-proof",
				"title": "️️Run proof",
				"icon": "icons/play-circle-1-icon.png",
				"enablement": "view == proof-explorer-view && !proof-explorer.running",
				"category": "pvs"
			},
			{
				"command": "proof-explorer.fast-forward",
				"title": "️️Fast forward here",
				"icon": "icons/fast-forward-icon-alt-2.png",
				"enablement": "view == proof-explorer-view && viewItem != root && in-checker == true && !proof-explorer.running",
				"category": "pvs"
			},
			{
				"command": "proof-mate.activate-basic-profile",
				"title": "Switch to Basic Profile",
				"enablement": "in-checker == true && !basic-profile-active",
				"category": "pvs"
			},
			{
				"command": "proof-mate.activate-advanced-profile",
				"title": "Switch to Advanced Profile",
				"enablement": "in-checker == true && !advanced-profile-active",
				"category": "pvs"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "vscode-pvs.open-pvs-workspace",
					"group": "navigation"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "explorerResourceIsFolder",
					"group": "1-navigation"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true || resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || explorerResourceIsFolder && pvs-server-active == true && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.show-proof-summary",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.prove-theory",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.prove-importchain",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yyy_commands"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "resourceScheme == file && resourceExtname == .pvs && pvs-server-active == true || resourceScheme == file && resourceExtname == .tccs && pvs-server-active == true || resourceScheme == file && resourceExtname == .summary && pvs-server-active == true",
					"group": "yyyy_commands"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-pvs.prove-formula",
					"when": "view == workspace-explorer-view && viewItem == tcc || view == workspace-explorer-view && viewItem == theorem",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.typecheck-file-inline",
					"when": "view == workspace-explorer-view && viewItem == theory",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.prove-theory-inline",
					"when": "view == workspace-explorer-view && viewItem == theory",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-0"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-0"
				},
				{
					"command": "vscode-pvs.show-proof-summary",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-1"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-1"
				},
				{
					"command": "vscode-pvs.prove-theory",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-2"
				},
				{
					"command": "vscode-pvs.prove-importchain",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-2"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-3"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "view == workspace-explorer-view && viewItem != workspace-overview",
					"group": "context-menu/ctrl-common-4"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "view == workspace-explorer-view && viewItem == tccs-overview",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1"
				},
				{
					"command": "vscode-pvs.open-pvs-file-or-folder",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1.1"
				},
				{
					"command": "vscode-pvs.open-pvs-workspace",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1.1"
				},
				{
					"command": "vscode-pvs.view-prelude-file",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1.2"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1.3"
				},
				{
					"command": "vscode-pvs.clean-pvs-workspace",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1.4"
				},
				{
					"command": "proof-explorer.fast-forward",
					"when": "view == proof-explorer-view && viewItem != root",
					"group": "context-menu/ctrl"
				},
				{
					"command": "proof-explorer.fast-forward",
					"when": "view == proof-explorer-view && viewItem != root",
					"group": "inline"
				},
				{
					"command": "proof-explorer.run-proof",
					"when": "view == proof-explorer-view && viewItem == root",
					"group": "context-menu/ctrl"
				},
				{
					"command": "proof-explorer.show-sequent",
					"when": "view == proof-explorer-view && viewItem != root",
					"group": "context-menu/ctrl-1"
				},
				{
					"command": "proof-explorer.create-proof-branch",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-0"
				},
				{
					"command": "proof-explorer.new-proof-command",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-0"
				},
				{
					"command": "proof-explorer.copy-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.cut-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.paste-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.copy-subtree",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-2"
				},
				{
					"command": "proof-explorer.cut-subtree",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-2"
				},
				{
					"command": "proof-explorer.paste-subtree",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-2"
				},
				{
					"command": "proof-explorer.edit-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-3"
				},
				{
					"command": "proof-explorer.delete-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-4"
				},
				{
					"command": "proof-explorer.trim-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-4"
				},
				{
					"command": "proof-explorer.trim-unused",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-5"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proofmate-item",
					"group": "inline"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proofmate-item",
					"group": "context-menu/exec"
				},
				{
					"command": "proof-mate.run-sketchpad",
					"when": "view == proof-mate-view && viewItem == proofmate-sketchpad",
					"group": "inline"
				},
				{
					"command": "proof-mate.send-to-terminal",
					"when": "view == proof-mate-view && viewItem == proofmate-item",
					"group": "context-menu/exec-1"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proof-command",
					"group": "inline"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proof-command",
					"group": "context-menu/exec"
				},
				{
					"command": "proof-mate.send-to-terminal",
					"when": "view == proof-mate-view && viewItem == proof-command",
					"group": "context-menu/exec-1"
				}
			],
			"editor/title/context": [
				{
					"command": "vscode-pvs.hp2pvs",
					"when": "resourceScheme == file && resourceExtname == .hpvs",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "pvs-server-active && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs && editorLangId == pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.show-proof-summary",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.prove-theory",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.prove-importchain",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yyy_commands"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "resourceScheme == file && resourceExtname == .pvs && editorLangId == pvs",
					"group": "yyyy_commands"
				}
			],
			"editor/context": [
				{
					"command": "vscode-pvs.hp2pvs",
					"when": "resourceScheme == file && resourceExtname == .hpvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "resourceExtname == .pvs && pvs-server-active && editorLangId == pvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.show-proof-summary",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.prove-theory",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.prove-importchain",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yya_commands"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "resourceExtname == .pvs && editorLangId == pvs || resourceExtname == .tccs && editorLangId == pvs || resourceExtname == .hpvs && editorLangId == pvs",
					"group": "yyy_commands"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "resourceScheme == file && resourceExtname == .pvs && editorLangId == pvs",
					"group": "yyyy_commands"
				}
			],
			"view/title": [
				{
					"command": "proof-explorer.back",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.forward",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.run-proof",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.new-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-0"
				},
				{
					"command": "proof-explorer.open-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-0.1"
				},
				{
					"command": "proof-explorer.quit-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-2"
				},
				{
					"command": "proof-mate.activate-basic-profile",
					"when": "view == proof-mate-view",
					"group": "profile-0"
				},
				{
					"command": "proof-mate.activate-advanced-profile",
					"when": "view == proof-mate-view",
					"group": "profile-1"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1"
				},
				{
					"command": "vscode-pvs.open-pvs-file-or-folder",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1.1"
				},
				{
					"command": "vscode-pvs.open-pvs-workspace",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1.1"
				},
				{
					"command": "vscode-pvs.open-pvs-workspace",
					"when": "view == workspace-explorer-view",
					"group": "navigation"
				},
				{
					"command": "vscode-pvs.view-prelude-file",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1.2"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1.3"
				},
				{
					"command": "vscode-pvs.clean-pvs-workspace",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1.4"
				}
			]
		},
		"keybindings": [
			{
				"key": "alt+x",
				"command": "vscode-pvs.metax",
				"when": "pvs-server-active"
			},
			{
				"key": "shift+alt+x",
				"command": "vscode-pvs.metax",
				"when": "pvs-server-active"
			},
			{
				"key": "ctrl+alt+t",
				"command": "vscode-pvs.typecheck-file",
				"when": "resourceLangId == pvs"
			},
			{
				"key": "ctrl+c",
				"command": "workbench.action.terminal.sendSequence",
				"args": {
					"text": ""
				},
				"note": "overriding default vscode command, which kills the terminal",
				"mnemonic": "TODO: redirect to ctrl+shift+c",
				"when": "terminalFocus && resourceLangId == pvs"
			},
			{
				"key": "ctrl+c",
				"command": "proof-explorer.copy-node",
				"args": {
					"text": ""
				},
				"note": "copy proof proof subtree",
				"when": "view == proof-explorer-view"
			},
			{
				"key": "ctrl+x",
				"command": "proof-explorer.cut-node",
				"args": {
					"text": ""
				},
				"note": "cut proof command in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "ctrl+v",
				"command": "proof-explorer.paste-node",
				"args": {
					"text": ""
				},
				"note": "paste proof command in proof explorer",
				"when": "view == proof-explorer-view"
			},
			{
				"key": "F2",
				"command": "proof-explorer.edit-node",
				"args": {
					"text": ""
				},
				"note": "rename proof command in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "F5",
				"command": "proof-explorer.run-proof",
				"args": {
					"text": ""
				},
				"note": "run proof in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "F6",
				"command": "proof-explorer.forward",
				"args": {
					"text": ""
				},
				"note": "step proof in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "F4",
				"command": "proof-explorer.back",
				"args": {
					"text": ""
				},
				"note": "one step back in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			}
		],
		"languages": [
			{
				"id": "pvs",
				"extensions": [
					".pvs",
					".tccs",
					".ppe",
					".prf",
					".jprf",
					".pr",
					".prlite",
					".prl",
					".hpvs",
					".summary"
				],
				"firstLine": "\\s*((%+\\w+)|((\\w+)\\s*(?:\\[([\\w\\W\\s]*)\\])?\\s*\\:\\s*(THEORY|theory|Theory)\\b))",
				"filenames": [
					".pvscontext"
				],
				"configuration": "./syntax/pvs-language-configuration.json",
				"aliases": [
					"PVS"
				]
			}
		],
		"grammars": [
			{
				"language": "pvs",
				"scopeName": "source.pvs",
				"path": "./syntax/pvs-language.json"
			}
		],
		"colors": [
			{
				"id": "pvs.keywords.color",
				"description": "Decoration color for reserved keywords",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.operators.color",
				"description": "Decoration color for operators",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.builtinTypes.color",
				"description": "Decoration color for basic types",
				"defaults": {
					"dark": "#31d18e",
					"light": "#27975fd3",
					"highContrast": "#27975fd3"
				}
			},
			{
				"id": "pvs.functions.color",
				"description": "Decoration color for library functions",
				"defaults": {
					"dark": "#31d18e",
					"light": "#27975fd3",
					"highContrast": "#27975fd3"
				}
			},
			{
				"id": "pvs.comments.color",
				"description": "Decoration color for basic types",
				"defaults": {
					"dark": "#29a385e7",
					"light": "#174b40a8",
					"highContrast": "#1d4b17a8"
				}
			},
			{
				"id": "pvs.numbers.color",
				"description": "Decoration color for numbers",
				"defaults": {
					"dark": "#e0f584",
					"light": "#7d8a43f8",
					"highContrast": "#7d8a43f8"
				}
			},
			{
				"id": "pvs.strings.color",
				"description": "Decoration color for numbers",
				"defaults": {
					"dark": "#f5c484",
					"light": "#8a7443f8",
					"highContrast": "#8a7443f8"
				}
			},
			{
				"id": "pvs.constants.color",
				"description": "Decoration color for constants",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.error.syntax",
				"description": "Decoration color for syntax errors",
				"defaults": {
					"dark": "#ff3fc5d2",
					"light": "#ce279c4b",
					"highContrast": "#af248155"
				}
			}
		]
	},
	"scripts": {
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test:server": "node_modules/jasmine-ts/lib/index.js --config=server/test/jasmine-specs/jasmine-test-all.json",
		"lint": "eslint --ext .ts server/src && eslint --ext .ts client/src"
	},
	"eslintConfig": {
		"env": {
			"node": true,
			"commonjs": true,
			"es6": true
		},
		"parserOptions": {
			"sourceType": "module"
		}
	},
	"dependencies": {
		"typescript": "^3.9.3",
		"vsce": "^1.80.0",
		"xmlrpc": "^1.3.2"
	},
	"devDependencies": {
		"@types/jasmine": "^3.5.0",
		"@types/node": "12.12.2",
		"@types/vscode": "^1.32.3",
		"@typescript-eslint/eslint-plugin": "^2.25.0",
		"@typescript-eslint/parser": "^2.25.0",
		"jasmine": "^3.5.0",
		"jasmine-ts": "^0.3.0",
		"eslint": "^6.8.0",
		"ts-node": "^7.0.0"
	},
	"resolutions": {
		"mem": "^6.1.0",
		"yargs-parser": "^18.1.3"
	}
}
