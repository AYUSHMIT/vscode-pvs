{
	"name": "vscode-pvs",
	"description": "Integrates the PVS theorem proving system into Visual Studio Code",
	"version": "1.0.22-gamma",
	"author": "Paolo Masci",
	"displayName": "PVS",
	"icon": "icons/pvs-icon.png",
	"license": "NASA-1.3",
	"notices": {
		"copyright": "Copyright 2019 United States Government as represented by the Administrator of the National Aeronautics and Space Administration. All Rights Reserved.",
		"disclaimers": {
			"No Warranty": "THE SUBJECT SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE. THIS AGREEMENT DOES NOT, IN ANY MANNER, CONSTITUTE AN ENDORSEMENT BY GOVERNMENT AGENCY OR ANY PRIOR RECIPIENT OF ANY RESULTS, RESULTING DESIGNS, HARDWARE, SOFTWARE PRODUCTS OR ANY OTHER APPLICATIONS RESULTING FROM USE OF THE SUBJECT SOFTWARE.  FURTHER, GOVERNMENT AGENCY DISCLAIMS ALL WARRANTIES AND LIABILITIES REGARDING THIRD-PARTY SOFTWARE, IF PRESENT IN THE ORIGINAL SOFTWARE, AND DISTRIBUTES IT 'AS IS.'",
			"Waiver and Indemnity": "RECIPIENT AGREES TO WAIVE ANY AND ALL CLAIMS AGAINST THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT.  IF RECIPIENT'S USE OF THE SUBJECT SOFTWARE RESULTS IN ANY LIABILITIES, DEMANDS, DAMAGES, EXPENSES OR LOSSES ARISING FROM SUCH USE, INCLUDING ANY DAMAGES FROM PRODUCTS BASED ON, OR RESULTING FROM, RECIPIENT'S USE OF THE SUBJECT SOFTWARE, RECIPIENT SHALL INDEMNIFY AND HOLD HARMLESS THE UNITED STATES GOVERNMENT, ITS CONTRACTORS AND SUBCONTRACTORS, AS WELL AS ANY PRIOR RECIPIENT, TO THE EXTENT PERMITTED BY LAW.  RECIPIENT'S SOLE REMEDY FOR ANY SUCH MATTER SHALL BE THE IMMEDIATE, UNILATERAL TERMINATION OF THIS AGREEMENT."
		}
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/nasa/vscode-pvs"
	},
	"publisher": "paolomasci",
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"vscode-pvs",
		"pvs",
		"prototype verification system"
	],
	"engines": {
		"vscode": "^1.32.3"
	},
	"activationEvents": [
		"onLanguage:pvs"
	],
	"main": "./client/out/pvsLanguageClient",
	"contributes": {
		"notes": {
			"description": "These contributed settings can be read using vscode.workspace.getConfiguration('pvs')"
		},
		"configuration": [
			{
				"type": "object",
				"title": "PVS: Prototype Verification System",
				"properties": {
					"pvs.path": {
						"type": "string",
						"default": "",
						"description": "PVS installation folder."
					},
					"pvs.settings.codelensProvider": {
						"type": "boolean",
						"default": true,
						"description": "Inline actionable commands"
					},
					"pvs.settings.completionProvider": {
						"type": "boolean",
						"default": true,
						"description": "Autocompletion for function names and language keywords"
					},
					"pvs.settings.definitionProvider": {
						"type": "boolean",
						"default": true,
						"description": "Automatic search of symbol definitions"
					},
					"pvs.settings.hoverProvider": {
						"type": "boolean",
						"default": true,
						"description": "Hover information for symbol definitions"
					},
					"pvs.settings.parser.errorTolerant": {
						"type": "boolean",
						"default": false,
						"description": "Enable error tolerant parser. Requires Java JDK v1.8 or greater (https://openjdk.java.net)"
					},
					"pvs.settings.prover.watchdog": {
						"type": "number",
						"default": 8,
						"description": "Proof commands are aborted if they don't produce results within this timeout (time is in seconds, 0 means timeout disabled)"
					}
				}
			}
		],
		"iconThemes": [
			{
				"id": "pvs",
				"label": "PVS",
				"path": "./icons/pvs-icons-theme.json"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "pvs-container",
					"title": "PVS",
					"icon": "icons/pvs-icon.png"
				}
			]
		},
		"views": {
			"pvs-container": [],
			"explorer": [
				{
					"id": "workspace-explorer-view",
					"name": "PVS Workspace Explorer",
					"when": "pvs-server-active"
				},
				{
					"id": "proof-explorer-view",
					"name": "PVS Proof Explorer",
					"when": "pvs-server-active && prover-session-active"
				},
				{
					"id": "proof-mate-view",
					"name": "PVS Proof Mate",
					"when": "pvs-server-active && prover-session-active"
				}
			]
		},
		"snippets": [
			{
				"language": "pvs",
				"path": "./snippets.json"
			}
		],
		"languageServerExample.trace.server": {
			"scope": "window",
			"anyOf": [
				{
					"type": "string",
					"enum": [
						"off",
						"messages",
						"verbose"
					],
					"default": "off"
				},
				{
					"type": "object",
					"properties": {
						"verbosity": {
							"type": "string",
							"enum": [
								"off",
								"messages",
								"verbose"
							],
							"default": "off"
						},
						"format": {
							"type": "string",
							"enum": [
								"text",
								"json"
							],
							"default": "text"
						}
					}
				}
			],
			"default": "off",
			"description": "Traces the communication between VS Code and the language server."
		},
		"commands": [
			{
				"command": "vscode-pvs.typecheck-file",
				"title": "Typecheck File",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.typecheck",
				"title": "Typecheck",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.autorun-theory",
				"title": "Re-run all proofs",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.generate-tccs",
				"title": "Generate TCCs",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.show-tccs",
				"title": "Show Typecheck Conditions (TCCs)",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.show-tccs-alt",
				"title": "Show",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.parse-file",
				"title": "Parse File",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.new-pvs-file",
				"title": "New PVS File",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.parse-workspace",
				"title": "Parse Workspace",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.typecheck-workspace",
				"title": "Typecheck Workspace",
				"enablement": "pvs-server-active == true && !macOs"
			},
			{
				"command": "vscode-pvs.hp2pvs",
				"title": "Generate PVS file",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.prove-formula",
				"title": "Prove",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.command-palette",
				"title": "Command Palette...",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.discharge-tccs-alt",
				"title": "Discharge",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.discharge-theorems-alt",
				"title": "Discharge",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.discharge-tccs",
				"title": "Discharge all TCCs",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "vscode-pvs.pvsio-evaluator",
				"title": "Evaluate in PVSio",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "proof-mate.exec-proof-command",
				"title": "Execute",
				"enablement": "pvs-server-active == true",
				"icon": "icons/play-icon.png"
			},
			{
				"command": "proof-explorer.delete-node",
				"title": "Delete",
				"enablement": "view == proof-explorer-view && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.trim-subtree",
				"title": "Trim",
				"enablement": "view == proof-explorer-view && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.create-proof-branch",
				"title": "New branch",
				"enablement": "view == proof-explorer-view && viewItem != proof-branch && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.append-node",
				"title": "New proof command",
				"enablement": "view == proof-explorer-view && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.mark-as-pending",
				"title": "Mark as pending",
				"enablement": "view == proof-explorer-view && viewItem === proof-branch && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.mark-as-visited",
				"title": "Mark as visited",
				"enablement": "view == proof-explorer-view && viewItem != root && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.mark-as-not-visited",
				"title": "Mark as not visited",
				"enablement": "view == proof-explorer-view && viewItem != root && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.mark-as-active",
				"title": "Mark as active",
				"enablement": "view == proof-explorer-view && viewItem != root && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.show-sequent",
				"title": "Open sequent in the editor",
				"enablement": "view == proof-explorer-view && pvs-server-active == true",
				"icon": "icons/browser-arrow-icon.png"
			},
			{
				"command": "proof-explorer.rename-node",
				"title": "Rename",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "proof-explorer.cut-node",
				"title": "Cut",
				"enablement": "view == proof-explorer-view && viewItem != root && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.copy-node",
				"title": "Copy proof command",
				"enablement": "view == proof-explorer-view && viewItem != root && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.copy-subtree",
				"title": "Copy",
				"enablement": "view == proof-explorer-view && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.paste-node",
				"title": "Paste",
				"enablement": "view == proof-explorer-view && proof-explorer.clipboard-contains-node && pvs-server-active == true"
			},
			{
				"command": "proof-explorer.save-proof",
				"title": "Save",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "proof-explorer.save-proof-as",
				"title": "Save As...",
				"enablement": "false"
			},
			{
				"command": "proof-explorer.open-proof",
				"title": "Open Proof File...",
				"enablement": "false"
			},
			{
				"command": "proof-explorer.quit-proof",
				"title": "Quit",
				"enablement": "pvs-server-active == true"
			},
			{
				"command": "proof-explorer.back",
				"title": "Back one step",
				"icon": "icons/prev-icon.png",
				"enablement": "prover-session-active == true"
			},
			{
				"command": "proof-explorer.forward",
				"title": "Step proof",
				"icon": "icons/next-icon.png",
				"enablement": "prover-session-active == true"
			},
			{
				"command": "proof-explorer.run-proof",
				"title": "️️Run proof",
				"icon": "icons/play-circle-1-icon.png",
				"enablement": "view == proof-explorer-view && prover-session-active == true"
			},
			{
				"command": "proof-explorer.fast-forward",
				"title": "️️Fast forward",
				"icon": "icons/fast-forward-icon.png",
				"enablement": "view == proof-explorer-view && viewItem != root && prover-session-active == true"
			},
			{
				"command": "proof-mate.show-sequent",
				"title": "️️Open current sequent in the editor",
				"icon": "icons/browser-arrow-icon.png",
				"enablement": "prover-session-active == true"
			},
			{
				"command": "proof-mate.activate-basic-profile",
				"title": "Switch to Basic Profile",
				"enablement": "prover-session-active == true && !basic-profile-active"
			},
			{
				"command": "proof-mate.activate-advanced-profile",
				"title": "Switch to Advanced Profile",
				"enablement": "prover-session-active == true && !advanced-profile-active"
			},
			{
				"command": "workspace-explorer.prove-all",
				"title": "Prove All",
				"enablement": "false"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceExtname == .pvs || resourceExtname == .hpvs"
				},
				{
					"command": "vscode-pvs.generate-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "explorerResourceIsFolder && pvs-server-active == true"
				},
				{
					"command": "vscode-pvs.parse-workspace",
					"when": "explorerResourceIsFolder && pvs-server-active == true"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "explorerResourceIsFolder"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-pvs.prove-formula",
					"when": "view == workspace-explorer-view && viewItem == tcc",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.prove-formula",
					"when": "view == workspace-explorer-view && viewItem == theorem",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.typecheck",
					"when": "view == workspace-explorer-view && viewItem == pvs-file",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.typecheck",
					"when": "view == workspace-explorer-view && viewItem == theory",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.autorun-theory",
					"when": "view == workspace-explorer-view && viewItem == theory",
					"group": "context-menu/ctrl-1"
				},
				{
					"command": "vscode-pvs.discharge-tccs-alt",
					"when": "false && view == workspace-explorer-view && viewItem == tccs-overview",
					"group": "inline"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-1"
				},
				{
					"command": "vscode-pvs.parse-workspace",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-2"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-2"
				},
				{
					"command": "workspace-explorer.prove-all",
					"when": "view == workspace-explorer-view && viewItem == workspace-overview",
					"group": "context-menu/ctrl-3"
				},
				{
					"command": "proof-explorer.fast-forward",
					"when": "view == proof-explorer-view && viewItem != root",
					"group": "context-menu/ctrl"
				},
				{
					"command": "proof-explorer.run-proof",
					"when": "view == proof-explorer-view && viewItem == root",
					"group": "context-menu/ctrl"
				},
				{
					"command": "proof-explorer.show-sequent",
					"when": "view == proof-explorer-view && viewItem != root",
					"group": "context-menu/ctrl-1"
				},
				{
					"command": "proof-explorer.create-proof-branch",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-0"
				},
				{
					"command": "proof-explorer.append-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-0"
				},
				{
					"command": "proof-explorer.copy-subtree",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.cut-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.paste-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-1"
				},
				{
					"command": "proof-explorer.copy-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-2"
				},
				{
					"command": "proof-explorer.rename-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-3"
				},
				{
					"command": "proof-explorer.delete-node",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-4"
				},
				{
					"command": "proof-explorer.trim-subtree",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-4"
				},
				{
					"command": "proof-explorer.mark-as-pending",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-6"
				},
				{
					"command": "proof-explorer.mark-as-visited",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-6"
				},
				{
					"command": "proof-explorer.mark-as-not-visited",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-6"
				},
				{
					"command": "proof-explorer.mark-as-active",
					"when": "view == proof-explorer-view",
					"group": "context-menu/edit-6"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proofmate-item",
					"group": "inline"
				},
				{
					"command": "proof-mate.exec-proof-command",
					"when": "view == proof-mate-view && viewItem == proofmate-item",
					"group": "context-menu/exec"
				}
			],
			"editor/title/context": [
				{
					"command": "vscode-pvs.parse-file",
					"when": "resourceExtname == .pvs || resourceExtname == .hpvs",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.parse-workspace",
					"when": "pvs-server-active",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.hp2pvs",
					"when": "resourceScheme == file && resourceExtname == .hpvs",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceExtname == .pvs || resourceExtname == .hpvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "pvs-server-active",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "false && resourceScheme == file && resourceExtname == .tccs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "resourceScheme == file && resourceExtname == .pvs",
					"group": "yyy_commands"
				}
			],
			"editor/context": [
				{
					"command": "vscode-pvs.parse-file",
					"when": "resourceExtname == .pvs || resourceExtname == .hpvs",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.parse-workspace",
					"when": "pvs-server-active",
					"group": "x_commands"
				},
				{
					"command": "vscode-pvs.hp2pvs",
					"when": "resourceScheme == file && resourceExtname == .hpvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-file",
					"when": "resourceExtname == .pvs || resourceExtname == .hpvs",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "pvs-server-active",
					"group": "y_commands"
				},
				{
					"command": "vscode-pvs.show-tccs",
					"when": "resourceScheme == file && resourceExtname == .pvs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.discharge-tccs",
					"when": "false && resourceScheme == file && resourceExtname == .tccs",
					"group": "yy_commands"
				},
				{
					"command": "vscode-pvs.pvsio-evaluator",
					"when": "resourceScheme == file && resourceExtname == .pvs",
					"group": "yyy_commands"
				}
			],
			"view/title": [
				{
					"command": "proof-explorer.back",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.forward",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.run-proof",
					"when": "view == proof-explorer-view",
					"group": "navigation"
				},
				{
					"command": "proof-explorer.open-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-0"
				},
				{
					"command": "proof-explorer.save-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-1"
				},
				{
					"command": "proof-explorer.save-proof-as",
					"when": "view == proof-explorer-view",
					"group": "ctrl-1"
				},
				{
					"command": "proof-explorer.quit-proof",
					"when": "view == proof-explorer-view",
					"group": "ctrl-2"
				},
				{
					"command": "proof-mate.show-sequent",
					"when": "view == proof-mate-view",
					"group": "navigation"
				},
				{
					"command": "proof-mate.activate-basic-profile",
					"when": "view == proof-mate-view",
					"group": "profile-0"
				},
				{
					"command": "proof-mate.activate-advanced-profile",
					"when": "view == proof-mate-view",
					"group": "profile-1"
				},
				{
					"command": "vscode-pvs.new-pvs-file",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-1"
				},
				{
					"command": "vscode-pvs.parse-workspace",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-2"
				},
				{
					"command": "vscode-pvs.typecheck-workspace",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-2"
				},
				{
					"command": "workspace-explorer.prove-all",
					"when": "view == workspace-explorer-view",
					"group": "ctrl-3"
				}
			]
		},
		"keybindings": [
			{
				"key": "alt+x",
				"command": "vscode-pvs.metax",
				"when": "resourceLangId == pvs"
			},
			{
				"key": "shift+alt+x",
				"command": "vscode-pvs.metax",
				"when": "resourceLangId == pvs"
			},
			{
				"key": "ctrl+alt+t",
				"command": "vscode-pvs.typecheck-file",
				"when": "resourceLangId == pvs"
			},
			{
				"command": "proof-explorer.grind",
				"when": "resourceLangId == pvs"
			},
			{
				"key": "ctrl+c",
				"command": "workbench.action.terminal.sendSequence",
				"args": {
					"text": ""
				},
				"note": "overriding default vscode command, which kills the terminal",
				"mnemonic": "TODO: redirect to ctrl+shift+c",
				"when": "terminalFocus && resourceLangId == pvs"
			},
			{
				"key": "ctrl+c",
				"command": "proof-explorer.copy-subtree",
				"args": {
					"text": ""
				},
				"note": "copy proof proof subtree",
				"when": "view == proof-explorer-view"
			},
			{
				"key": "ctrl+x",
				"command": "proof-explorer.cut-node",
				"args": {
					"text": ""
				},
				"note": "cut proof command in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "ctrl+s",
				"command": "proof-explorer.save-proof",
				"args": {
					"text": ""
				},
				"when": "view == proof-explorer-view"
			},
			{
				"key": "ctrl+v",
				"command": "proof-explorer.paste-node",
				"args": {
					"text": ""
				},
				"note": "paste proof command in proof explorer",
				"when": "view == proof-explorer-view"
			},
			{
				"key": "F2",
				"command": "proof-explorer.rename-node",
				"args": {
					"text": ""
				},
				"note": "rename proof command in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "Del",
				"command": "proof-explorer.delete-node",
				"when": "view == proof-explorer-view"
			},
			{
				"key": "F5",
				"command": "proof-explorer.run-proof",
				"args": {
					"text": ""
				},
				"note": "run proof in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "F6",
				"command": "proof-explorer.forward",
				"args": {
					"text": ""
				},
				"note": "step proof in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			},
			{
				"key": "F4",
				"command": "proof-explorer.back",
				"args": {
					"text": ""
				},
				"note": "one step back in proof explorer",
				"when": "view == proof-explorer-view && viewItem == proof-command"
			}
		],
		"languages": [
			{
				"id": "pvs",
				"extensions": [
					".pvs",
					".tccs",
					".ppe",
					".prf",
					".jprf",
					".pr",
					".hpvs"
				],
				"firstLine": "\\s*((%+\\w+)|((\\w+)\\s*(?:\\[([\\w\\W\\s]*)\\])?\\s*\\:\\s*(THEORY|theory|Theory)\\b))",
				"filenames": [
					".pvscontext"
				],
				"configuration": "./syntax/pvs-language-configuration.json",
				"aliases": [
					"PVS"
				]
			}
		],
		"grammars": [
			{
				"language": "pvs",
				"scopeName": "source.pvs",
				"path": "./syntax/pvs-language.json"
			}
		],
		"colors": [
			{
				"id": "pvs.keywords.color",
				"description": "Decoration color for reserved keywords",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.operators.color",
				"description": "Decoration color for operators",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.builtinTypes.color",
				"description": "Decoration color for basic types",
				"defaults": {
					"dark": "#31d18e",
					"light": "#27975fd3",
					"highContrast": "#27975fd3"
				}
			},
			{
				"id": "pvs.functions.color",
				"description": "Decoration color for library functions",
				"defaults": {
					"dark": "#31d18e",
					"light": "#27975fd3",
					"highContrast": "#27975fd3"
				}
			},
			{
				"id": "pvs.comments.color",
				"description": "Decoration color for basic types",
				"defaults": {
					"dark": "#29a385e7",
					"light": "#174b40a8",
					"highContrast": "#1d4b17a8"
				}
			},
			{
				"id": "pvs.numbers.color",
				"description": "Decoration color for numbers",
				"defaults": {
					"dark": "#e0f584",
					"light": "#7d8a43f8",
					"highContrast": "#7d8a43f8"
				}
			},
			{
				"id": "pvs.strings.color",
				"description": "Decoration color for numbers",
				"defaults": {
					"dark": "#f5c484",
					"light": "#8a7443f8",
					"highContrast": "#8a7443f8"
				}
			},
			{
				"id": "pvs.constants.color",
				"description": "Decoration color for constants",
				"defaults": {
					"dark": "#3fa9ff",
					"light": "#4627ce55",
					"highContrast": "#2450af55"
				}
			},
			{
				"id": "pvs.error.syntax",
				"description": "Decoration color for syntax errors",
				"defaults": {
					"dark": "#ff3fc5d2",
					"light": "#ce279c4b",
					"highContrast": "#af248155"
				}
			}
		]
	},
	"scripts": {
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test:server": "node_modules/jasmine-ts/lib/index.js --config=server/test/jasmine-specs/jasmine-test-all.json",
		"lint": "eslint --ext .ts server/src && eslint --ext .ts client/src"
	},
	"eslintConfig": {
		"env": {
			"node": true,
			"commonjs": true,
			"es6": true
		},
		"parserOptions": {
			"sourceType": "module"
		}
	},
	"dependencies": {
		"typescript": "^3.9.3",
		"vsce": "^1.77.0",
		"xmlrpc": "^1.3.2"
	},
	"devDependencies": {
		"@types/jasmine": "^3.5.0",
		"@types/node": "12.12.2",
		"@types/vscode": "^1.32.3",
		"@typescript-eslint/eslint-plugin": "^2.25.0",
		"@typescript-eslint/parser": "^2.25.0",
		"jasmine": "^3.5.0",
		"jasmine-ts": "^0.3.0",
		"eslint": "^6.8.0",
		"ts-node": "^7.0.0"
	},
	"resolutions": {
		"mem": "^6.1.0",
		"yargs-parser": "^18.1.3"
	}
}
