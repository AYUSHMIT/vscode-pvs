%% TCCs associated with theory BCtheory
%% This file was automatically generated by PVS, please **do not modify** by hand.
BCtheory: THEORY BEGIN

	% Subtype TCC generated (at line 90, column 57) for  newaccounts
	% expected type  [AccountNo -> Cash]
	  % unproved
	transition_TCC1: OBLIGATION
	FORALL (st: BCstatetype, trans: Transaction, miner: AccountNo):
	    memberfs(miner, st`liveaccounts) IMPLIES
	     FORALL (dgas: Cash):
	       dgas = st`accounts(trans`deployer) IMPLIES
	        FORALL (mgas: Cash):
	          mgas = st`accounts(miner) IMPLIES
	           FORALL (newdgas: int):
	             newdgas = dgas - trans`gas IMPLIES
	              FORALL (newmgas: nonneg_int):
	                newmgas = mgas + trans`gas IMPLIES
	                 FORALL (oldaccounts: [AccountNo -> Cash]):
	                   oldaccounts = st`accounts IMPLIES
	                    FORALL (newaccounts: [AccountNo -> int]):
	                      (newaccounts =
	                        LAMBDA (x: AccountNo):
	                          IF x = trans`deployer THEN newdgas
	                          ELSE IF x = miner THEN newmgas
	                               ELSE oldaccounts(x)
	                               ENDIF
	                          ENDIF)
	                       IMPLIES FORALL (x1: AccountNo): newaccounts(x1) >= 0
	
	% Subtype TCC generated (at line 139, column 33) for  config`transactions
	% expected type  (cons?)
	  % unproved
	c_change_TCC1: OBLIGATION
	FORALL (config: Configtype):
	    NOT null?(config`transactions) IMPLIES
	     cons?[Transaction](config`transactions)
	
	% The subtype TCC (at line 139, column 59) in decl c_change for  config`transactions
	% expected type  (cons?)
	% is subsumed by c_change_TCC1

END BCtheory